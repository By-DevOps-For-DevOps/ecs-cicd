AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for an app.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Github configuration"
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubToken
          - GitHubUser
      - Label:
          default: "S3 Bucket for Lambda Function"
        Parameters:
          - S3BucketName
      - Label:
          default: "API (Only for API App)"
        Parameters:
          - S3SwaggerBucketName
          - APIHostname
      - Label:
          default: "EC2 Container Service"
        Parameters:
          - ECSRepositoryName
          - ECSRegion
          - DesiredCount
          - ECSCPUCount
          - ECSMemoryReservationCount
          - ELBListenerPriority
      - Label:
          default: "Route53"
        Parameters:
          - HostedZone
      - Label:
          default: "ECS Production Parameters"
        Parameters:
          - SourceECSAWSAccountId
          - SourceECSRegion
      - Label:
          default: "Release Details"
        Parameters:
          - ReleasePlan
          - DeployEnvironment
          - ReleaseManagerGitEmail
          - ReleaseManagerGitUsername
          - ProductionAWSAccountNumber
      - Label:
          default: "Notifications"
        Parameters:
          - Email

Parameters:
  PipelineName:
    Description: A name for pipeline. For simplicity, you can keep it the same as stack name.
    Type: String
  GitHubRepo:
    Type: String
    Description: Github repo name (e.g. github.com/Org/RepoName then RepoName)
  GitHubBranch:
    Type: String
    Default: 'master'
    Description: The github branch to monitor for changes.
  GitHubToken:
    Type: String
    Description: The Github Token which has access to the repository.
  GitHubUser:
    Type: String
    Description: The Github User/Organization under which the repository is hosted.
  TagName:
    Type: String
    Description: Tag name for the cloudformation stack. For simplicity, you can keep it the same as stack name.
  InfrastructureTagName:
    Default: INFRA_TAG_NAME
    Type: String
    Description: Tag name specified for infrastructure cloudformation stack, e.g. v305.
  ECSRepositoryName:
    Type: String
    Description: >
      If your ECR URI is xxx.dkr.ecr.us-east-1.amazonaws.com/ngp-nodejs, then just type ngp-nodejs.
      Please note, ECR name should be the same for Staging and Production.
      Because, in Production environment CodeBuild pulls docker image from Staging ECR and
      pushes it to Production ECR by ECR name.
  ECSRegion:
    Type: String
    Description: Region containing the ECS Cluster.
    Default: ap-southeast-1
  HostedZone:
    Type: String
    Description: Hosted zone for Route53 entry with a dot(.) at the end of the domain (e.g. example.com.).
  DesiredCount:
    Type: Number
    Default: 1
    Description: ECS Service desired count.
  ECSCPUCount:
    Type: Number
    Default: 256
    Description: ECS CPU Count
  ECSMemoryReservationCount:
    Type: Number
    Default: 512
    Description: ECS Memory Reservation count
  ELBListenerPriority:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 50000
    Description: The priority for the routing rule added to the load balancer. This only applies if you have multiple services on single load balancer.
  ReleasePlan:
    Type: String
    Description: (Staging Only) Release version (Eg. 1.0.0) Plan for this Staging Pipeline (This should be updated for each release, manually :( )
  ReleaseManagerGitUsername:
    Type: String
    Description: (Staging Only) Github Username of the Release Manager
  ReleaseManagerGitEmail:
    Type: String
    Description: (Staging Only) Github Email of the Release Manager
  ProductionAWSAccountNumber:
    Type: String
    Description: (Staging Only) Production AWS Account Number
  SourceECSAWSAccountId:
    Type: String
    Description: (Production Only) AWS Account Id of the Staging ECS Cluster
  SourceECSRegion:
    Type: String
    Description: (Production Only) Region containing the Staging ECS Cluster
  S3BucketName:
    Default: S3_BUCKET_NAME
    Type: String
    Description: S3 Bucket which contains the Lambda function
  S3SwaggerBucketName:
    Type: String
    Description: (API App Only) S3 Bucket which contains the Swagger API docs. Leave empty if want to skip the api gateway resource.
  APIHostname:
    Type: String
    Description: (API App Only) API Gateway Hostname (e.g. api.example.com)
  DeployEnvironment:
    Type: String
    Description: Specify the environment
    AllowedValues:
      - production
      - staging
      - hotfix
      - development
      - feature
    ConstraintDescription: Must specify production, staging, hotfix, development or feature.
  Email:
    Type: String
    Description: Email Notification for CloudWatch Alarms
  SNSTopicARN:
    Type: String
    Description: (Optional) SNS Topic ARN for Slack notification. See prerequisite 6.
  CICDVersion:
    Type: String
    Default: 2.1.1
    Description: >
      Specify which type of servie are you going to use:
      - Sync (API) based https://github.com/microservices-today/ecs-api
      - Async (Queue) based https://github.com/microservices-today/ecs-mq
      - Or Cronjob based https://github.com/microservices-today/ecs-job

Mappings:
  EnvironmentTag:
    production:
      value: ""
      env: "Prod"
    staging:
      value: "candidate"
      env: "Staging"
    hotfix:
      value: "hotfix"
      env: "Dev"
    development:
      value: "snapshot"
      env: "Dev"
    feature:
      value: "feature"
      env: "Dev"

Conditions:
  IsProductionCondition: !Equals [ !Ref DeployEnvironment, production ]
  IsStagingCondition: !Equals [ !Ref DeployEnvironment, staging ]
  IsHotfixCondition: !Equals [ !Ref DeployEnvironment, hotfix ]
  IsDevelopmentCondition: !Equals [ !Ref DeployEnvironment, development ]
  IsFeatureCondition: !Equals [ !Ref DeployEnvironment, feature ]
  IsProdAWSAccNumDefined: !Not [ !Equals [ !Ref ProductionAWSAccountNumber, "" ] ]

Resources:
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub cfn-${TagName}-${DeployEnvironment}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "cloudformation.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action: "*"
      Tags:
        - Key: CloudFormation
          Value: true

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub cb-${TagName}-${DeployEnvironment}
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - !If
            - IsProductionCondition
            - Effect: "Allow"
              Principal:
                AWS:
                  - !Sub arn:aws:iam::${SourceECSAWSAccountId}:root
              Action:
                - "sts:AssumeRole"
            - !Ref "AWS::NoValue"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - ecr:*
                  - ssm:GetParameters
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:s3:::${S3SwaggerBucketName}/*
                Effect: Allow
                Action:
                  - s3:PutObject
      Tags:
        - Key: CloudFormation
          Value: true

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub cp-${TagName}-${DeployEnvironment}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole
                  - lambda:*
                  - ec2:CreateSecurityGroup
      Tags:
        - Key: CloudFormation
          Value: true

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: CloudFormation
          Value: true

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ '-', [ 'CodeBuildProject', !Ref 'AWS::StackName' ] ]
      Artifacts:
        Name: Built
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: "BUILD_GENERAL1_LARGE"
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: ECR_NAME
            Value: !Ref ECSRepositoryName
          - Name: SOURCE_AWS_ACCOUNT_ID
            Value: !Ref SourceECSAWSAccountId
          - Name: SOURCE_AWS_REGION
            Value: !Ref SourceECSRegion
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubToken
          - Name: DEPLOY_ENVIRONMENT
            Value: !Ref DeployEnvironment
          - Name: TAG_NAME
            Value: !Ref TagName
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: GITHUB_USER
            Value: !Ref GitHubUser
          - Name: BUILD_SCOPE
            Value: !FindInMap [EnvironmentTag, !Ref DeployEnvironment, value]
          - Name: EMAIL
            Value: !Ref Email
          - Name: RELEASE_PLAN
            Value: !Ref ReleasePlan
          - Name: ENVIRONMENT_NAME
            Value:
              !Join ["-", [!Ref InfrastructureTagName, !FindInMap [EnvironmentTag, !Ref DeployEnvironment, env]]]
          - Name: ECS_REGION
            Value: !Ref ECSRegion
          - Name: HOSTED_ZONE
            Value: !Ref HostedZone
          - Name: DESIRED_COUNT
            Value: !Ref DesiredCount
          - Name: ECS_CPU_COUNT
            Value: !Ref ECSCPUCount
          - Name: ECS_MEMORY_RESERVATION_COUNT
            Value: !Ref ECSMemoryReservationCount
          - Name: ELB_LISTENER_PRIORITY
            Value: !Ref ELBListenerPriority
          - Name: S3_APP_BUCKET_NAME
            Value: !Ref S3BucketName
          - Name: S3_SWAGGER_BUCKET_NAME
            Value: !Ref S3SwaggerBucketName
          - Name: API_HOSTNAME
            Value: !Ref APIHostname
          - Name: CICD_VERSION
            Value: !Ref CICDVersion
      ServiceRole: !Ref CodeBuildServiceRole
      Tags:
        - Key: CloudFormation
          Value: true

  CodeBuildRelease:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ '-', [ 'CodeBuildRelease', !Ref 'AWS::StackName' ] ]
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: "BUILD_GENERAL1_LARGE"
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubToken
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: GITHUB_USER
            Value: !Ref GitHubUser
          - Name: DEPLOY_ENVIRONMENT
            Value: 'release'
          - Name: RELEASE_PLAN
            Value: !Ref ReleasePlan
          - Name: GITHUB_USERNAME
            Value: !Ref ReleaseManagerGitUsername
          - Name: GITHUB_EMAIL
            Value: !Ref ReleaseManagerGitEmail
      ServiceRole: !Ref CodeBuildServiceRole
      Tags:
        - Key: CloudFormation
          Value: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Name: !Ref 'PipelineName'
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: Built
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: Built
              Configuration:
                ChangeSetName: Deploy
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt [CloudFormationExecutionRole, Arn]
                StackName: !Join ["-", ["Ref":"AWS::StackName", !Ref ECSRepositoryName]]
                TemplatePath: Built::ecs/service.yaml
              RunOrder: 3
        - !If
          - IsStagingCondition
          - Name: Release
            Actions:
              - Name: Approve-Release
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: '1'
                Configuration:
                  CustomData: 'Are you ready to release to Production?'
                RunOrder: 4
              - Name: Release
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref CodeBuildRelease
                InputArtifacts:
                  - Name: Built
                OutputArtifacts:
                  - Name: Release
                RunOrder: 5
          - !Ref AWS::NoValue
      Tags:
        - Key: CloudFormation
          Value: true

  #-----------------------------------------------------------------------------#
  # ECR
  #-----------------------------------------------------------------------------#
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ECSRepositoryName
      RepositoryPolicyText:
        !If
          - IsProdAWSAccNumDefined
          -
            Version: "2008-10-17"
            Statement:
              -
                Sid: AllowPull
                Effect: Allow
                Principal:
                  AWS:
                    - !Sub arn:aws:iam::${ProductionAWSAccountNumber}:root
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
          - !Ref AWS::NoValue
      Tags:
        - Key: CloudFormation
          Value: true

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
